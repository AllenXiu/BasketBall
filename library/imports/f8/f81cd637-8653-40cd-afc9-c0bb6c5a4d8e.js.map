{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,eAAO,EAAE,CAAC;AACV,kBAAU,EAAE,CAAC;KAChB;;AAED,QAAI,EAAE,cAAU,IAAI,EAAE;AAClB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;AACzB,YAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC7B;;AAED,aAAS,EAAE,qBAAU;AACjB,YAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,YAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;AACzC,YAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;AAC3B,YAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;;AAED,gBAAY,EAAE,wBAAY;AACtB,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;KAC5B;;AAED,eAAW,EAAE,uBAAY;AACrB,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,YAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAChD,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACxB;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;AAChC,gBAAI,CAAC,IAAI,IAAI,EAAE,CAAC;AAChB,gBAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAC;AACjE,oBAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,oBAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;aAC/B;;AAED,gBAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AAC/B,gBAAG,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;AACjB,oBAAI,GAAG,GAAG,GAAC,IAAI,CAAC;aACnB;AACD,gBAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAC3D;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        maxTime: 0,\n        timeToMove: 0,\n    },\n\n    init: function (game) {\n        this.game = game;\n        this.time = this.maxTime;\n        this.isTimeToMove = false;\n    },\n\n    _callback: function(){\n        this.counting = false;\n        this.game.basket.count.string = '00  00';\n        this.game.stopMoveBasket();\n        this.game.gameOver();\n    },\n\n    stopCounting: function () {\n        this.unschedule(this._callback);\n        this.time = this.maxTime;\n    },\n\n    oneSchedule: function () {\n        this.stopCounting();\n        this.scheduleOnce(this._callback, this.maxTime);\n        this.counting = true;\n    },\n\n    // called every frame\n    update: function (dt) {\n        if (this.counting && this.time > 0) {\n            this.time -= dt;\n            if(this.maxTime - this.timeToMove >= this.time && !this.isTimeToMove){\n                this.isTimeToMove = true;\n                this.game.startMoveBasket();\n            }\n\n            let text = this.time.toFixed(2)\n            if(text.length === 4){\n                text = '0'+text;\n            }\n            this.game.basket.count.string = text.replace('.', '  ');\n        }\n    },\n});\n"
  ]
}